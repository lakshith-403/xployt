import {Quark, QuarkFunction as $} from "@ui_lib/quark";
import {handleInputChange, validation} from "@views/hacker/VulnerabilityReport/VulnerabilityReportForm";

export class VulnerabilityTypeElement {
    private formObject: { vulnerabilityType: string };
    private validation: validation;

    constructor(formObject: { vulnerabilityType: string }) {
        this.formObject = formObject;
        this.validation = { result: true, message:'' };
    }

    render(q: Quark): void {
        $(q, 'span', 'form-element flex-1', {}, (q) => {
            $(q, 'label', 'label', {for: 'vulnerability-type'}, (q) => {
                q.innerHTML = 'Vulnerability Type';
            });
            $(q, 'select', `${!this.validation && 'error'} input`, {id: 'vulnerability-type'}, (q) => {
                $(q, 'option', '', {value: 'XSS'}, 'XSS');
                $(q, 'option', '', {value: 'CSRF'}, 'CSRF');
                $(q, 'option', '', {value: 'SQLi'}, 'SQLi');
                q.addEventListener('blur', (e) => {
                    handleInputChange(e, this.formObject, 'vulnerabilityType', 'string', q.parentElement!);
                });
            });
        });
    }
}

export class SeverityElement {
    private formObject: { severity: string };
    private validation: validation;

    constructor(formObject: { severity: string }) {
        this.formObject = formObject;
        this.validation = { result: true, message:'' };
    }

    render(q: Quark): void {
        $(q, 'span', 'form-element flex-1', {}, (q) => {
            $(q, 'label', 'label', {for: 'severity'}, "Severity");
            $(q, 'select', `input`, {id: "severity"}, (q) => {
                $(q, 'option', '', {value: 'Low'}, "Low");
                $(q, 'option', '', {value: 'Medium'}, "Medium");
                $(q, 'option', '', {value: 'High'}, "High");
                q.addEventListener('change', (e) => {
                    handleInputChange(e, this.formObject, 'severity', 'string', q.parentElement!);
                });
            });
        });
    }
}

export class ReportTitleElement {
    private formObject: { reportTitle: string };
    private validation: validation;

    constructor(formObject: { reportTitle: string }) {
        this.formObject = formObject;
        this.validation = { result: true, message:'' };
    }

    render(q: Quark): void {
        $(q, 'span', 'form-element align-center', {}, (q) => {
            $(q, 'label', 'label', {for: 'title'}, (q) => {
                q.innerHTML = 'Report Title';
            });
            $(q, 'input', `input`, {id: 'title'}, (q) => {
                q.addEventListener('input', (e) => {
                    handleInputChange(e, this.formObject, 'reportTitle', 'string', q.parentElement!);
                });
            });
        });
    }
}

export class DescriptionElement {
    private formObject: { description: string };
    private validation: validation;

    constructor(formObject: { description: string }) {
        this.formObject = formObject;
        this.validation = { result: true, message:'' };
    }

    render(parent: Quark): void {
        $(parent, 'span', 'form-element', {}, (q) => {
            $(q, 'label', 'label', {for: "report-description"}, (q) => {
                q.innerHTML = 'Description';
            });
            $(q, 'div', '', {}, (input) => {
                $(input, 'textarea', `input description`, {id: "report-description"}, (q) => {
                    q.addEventListener('blur', (e) => {
                        handleInputChange(e, this.formObject, 'description', 'string', q.parentElement!);
                    });
                });

            });

        });

    }
}