import {QuarkFunction as $, Quark} from '../../../ui_lib/quark';
import {View, ViewHandler} from '../../../ui_lib/view';
import './VulnerabilityReport.scss'
import {
    ProjectInfo,
    ProjectInfoCacheMock,
} from '../../../data/validator/cache/projectInfo';
import {UserCache, UserCacheMock} from '../../../data/user';
import {CACHE_STORE} from '../../../data/cache';

class VulnReportView implements View {
    params: { projectId: string };
    projectCache: ProjectInfoCacheMock;
    ProjectInformation: ProjectInfo | {} = {};

    constructor(params: { projectId: string }) {
        this.params = params;
        this.projectCache = CACHE_STORE.getProjectInfo(this.params.projectId);
        console.log('params: ', params)
    }

    async loadProjectData(): Promise<void> {
        try {
            this.ProjectInformation = await this.projectCache.get(
                false,
                this.params.projectId
            ) as ProjectInfo;

        } catch (error) {
            console.error('Failed to load project data:', error);
        }
    }

    async render(q: Quark): Promise<void> {
        const waiting = $(q, 'div', 'loading-screen', {}, (q) => {
            $(q, 'div', 'spinner', {}, (q) => {
            });
        });
        await this.loadProjectData();
        console.log(this.ProjectInformation);
        waiting.innerHTML = '';
        waiting.remove();

        $(q, 'div', 'vulnerability-report hacker', {}, (q) => {
            $(q, 'div', '', {}, (q) => {
                $(q, 'h2', 'section-subtitle', {}, (q) => {
                    q.innerHTML = `#${this.params.projectId} ${(this.ProjectInformation as ProjectInfo).title}`;
                })
                $(q, 'h1', 'section-title', {}, (q) => {
                    q.innerHTML = 'Vulnerability Report';
                });
                $(q, 'form', '', {}, (q) => {
                    $(q, 'div', 'form-section', {}, (q) => {
                        $(q, 'div', 'row', {}, (q) => {
                            $(q, 'span', 'form-element', {}, (q) => {
                                $(q, 'label', 'label', {}, (q) => {
                                    q.innerHTML = 'Vulnerability Type';
                                })
                                $(q, 'select', 'input', {}, (q) => {
                                    $(q, 'option', '', {value: 'XSS'}, (q) => {
                                        q.innerHTML = 'XSS';
                                    })
                                    $(q, 'option', '', {value: 'CSRF'}, (q) => {
                                        q.innerHTML = 'CSRF';
                                    })
                                    $(q, 'option', '', {value: 'SQLi'}, (q) => {
                                        q.innerHTML = 'SQLi';
                                    })
                                })
                            })
                            $(q, 'span', 'form-element', {}, (q) => {
                                $(q, 'label', 'label', {}, (q) => {
                                    q.innerHTML = 'Severity';
                                })
                                $(q, 'select', 'input', {}, (q) => {
                                    $(q, 'option', '', {value: 'Low'}, (q) => {
                                        q.innerHTML = 'Low';
                                    })
                                    $(q, 'option', '', {value: 'Medium'}, (q) => {
                                        q.innerHTML = 'Medium';
                                    })
                                    $(q, 'option', '', {value: 'High'}, (q) => {
                                        q.innerHTML = 'High';
                                    })
                                })
                            });
                        })
                        $(q, 'span', 'form-element', {}, (q) => {
                            $(q, 'label', 'label', {}, (q) => {
                                q.innerHTML = 'Description';
                            })
                            $(q, 'input', 'input', {}, (q) => {
                            })
                        })
                    })
                })
            });
        })
    }
}

export const vulnReportViewHandler = new ViewHandler(
    'report/{projectId}',
    VulnReportView
)