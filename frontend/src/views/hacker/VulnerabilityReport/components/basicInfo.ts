import {Quark, QuarkFunction as $} from '@ui_lib/quark';

export class BasicInfoSection {
    private formObject: {
        vulnerabilityType: string;
        severity: string;
        reportTitle: string;
        description: string;
        steps: {
            description: string;
            attachments: string;
        }[];
        agreement: boolean;
    };

    constructor(formObject: typeof BasicInfoSection.prototype.formObject) {
        this.formObject = formObject;
    }

    render(q: Quark): void {
        $(q, 'div', 'form-section section-divider', {id: 'basicInfo'}, (q) => {
            // Initial form elements
            $(q, 'div', 'row', {}, (q) => {
                $(q, 'span', 'form-element flex-1', {}, (q) => {
                    $(q, 'label', 'label', {for: 'vulnerability-type'}, (q) => {
                        q.innerHTML = 'Vulnerability Type';
                    });
                    $(q, 'select', 'input', {id: 'vulnerability-type'}, (q) => {
                        $(q, 'option', '', {value: 'XSS'}, 'XSS');
                        $(q, 'option', '', {value: 'CSRF'}, 'CSRF');
                        $(q, 'option', '', {value: 'SQLi'}, 'SQLi');
                        q.addEventListener('change', (e) => {
                            this.formObject.vulnerabilityType = (e.target as HTMLSelectElement).value;
                        });
                    });
                });
                $(q, 'span', 'form-element flex-1', {}, (q) => {
                    $(q, 'label', 'label', {for: 'severity'}, "Severity");
                    $(q, 'select', 'input', {id: "Severity"}, (q) => {
                        $(q, 'option', '', {value: 'Low'}, "Low");
                        $(q, 'option', '', {value: 'Medium'}, "Medium");
                        $(q, 'option', '', {value: 'High'}, "High");
                        q.addEventListener('change', (e) => {
                            this.formObject.severity = (e.target as HTMLSelectElement).value;
                        });
                    });
                });
            });
            $(q, 'div', 'row', {}, (q) => {
                $(q, 'span', 'form-element align-center', {}, (q) => {
                    $(q, 'label', 'label', {for: 'title'}, (q) => {
                        q.innerHTML = 'Report Title';
                    });
                    $(q, 'input', 'input', {id: 'title'}, (q) => {
                        q.addEventListener('input', (e) => {
                            this.formObject.reportTitle = (e.target as HTMLInputElement).value;
                        });
                    });
                });
            });
            $(q, 'div', 'row', {}, (q) => {
                $(q, 'span', 'form-element', {}, (q) => {
                    $(q, 'label', 'label', {for: "report-description"}, (q) => {
                        q.innerHTML = 'Description';
                    });
                    $(q, 'textarea', 'input description', {id: "report-description"}, (q) => {
                        q.addEventListener('input', (e) => {
                            this.formObject.description = (e.target as HTMLTextAreaElement).value;
                        });
                    });
                });
            });
        });
    }
}
